{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\User\\\\Documents\\\\Programming\\\\conure\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\User\\\\Documents\\\\Programming\\\\conure\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\User\\\\Documents\\\\Programming\\\\conure\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\User\\\\Documents\\\\Programming\\\\conure\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"C:\\\\Users\\\\User\\\\Documents\\\\Programming\\\\conure\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\User\\\\Documents\\\\Programming\\\\conure\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import Navbar from\"react-bootstrap/Navbar\";import Nav from\"react-bootstrap/Nav\";import Modal from\"react-bootstrap/Modal\";import Container from\"react-bootstrap/Container\";import Form from\"react-bootstrap/Form\";import Button from\"react-bootstrap/Button\";import Popover from\"react-bootstrap/Popover\";import OverlayTrigger from\"react-bootstrap/OverlayTrigger\";import{cx}from\"emotion\";import Styles from\"./ConureNavbarStyles.js\";import $ from\"jquery\";var ConureNavbar=/*#__PURE__*/function(_Component){_inherits(ConureNavbar,_Component);function ConureNavbar(props){var _this;_classCallCheck(this,ConureNavbar);_this=_possibleConstructorReturn(this,_getPrototypeOf(ConureNavbar).call(this,props));_this.state={showModal:false,showSettingsModal:false};_this.userKey=new URLSearchParams(window.location.search).get(\"id\");// Method Bindings\n_this.open=_this.open.bind(_assertThisInitialized(_this));_this.close=_this.close.bind(_assertThisInitialized(_this));_this.openSettingsModal=_this.openSettingsModal.bind(_assertThisInitialized(_this));_this.closeSettingsModal=_this.closeSettingsModal.bind(_assertThisInitialized(_this));return _this;}_createClass(ConureNavbar,[{key:\"open\",value:function open(){this.setState({showModal:true});}},{key:\"close\",value:function close(){this.setState({showModal:false});}},{key:\"openSettingsModal\",value:function openSettingsModal(){this.setState({showSettingsModal:true});}},{key:\"closeSettingsModal\",value:function closeSettingsModal(){this.setState({showSettingsModal:false});}},{key:\"render\",value:function render(){var _this2=this;var popover=React.createElement(Popover,{id:\"idInfo\"},React.createElement(Popover.Title,{as:\"h5\"},\"Key\"),React.createElement(Popover.Content,null,\"You can use this base64 key to log into your account.\"));return React.createElement(\"div\",{id:this.props.id},React.createElement(Navbar,{className:cx(Styles.NavbarStyle),bg:\"light\",expand:\"lg\"},React.createElement(Navbar.Brand,{href:\"#\"},React.createElement(\"img\",{className:cx(Styles.LogoStyle),src:\"../../../public/assets/img/ico/conure-light.ico\"}),\"Conure\"),React.createElement(OverlayTrigger,{trigger:\"click\",placement:\"bottom\",overlay:popover},React.createElement(\"span\",{className:cx(Styles.userKeyStyle),id:\"userKey\"},this.userKey)),React.createElement(Nav,{className:\"ml-auto\"},React.createElement(\"a\",{href:\"#\",className:cx(Styles.LoginLinkWrapperStyle)},React.createElement(\"small\",{className:cx(Styles.LoginLinkStyle),onClick:this.open},\"Login\"))),React.createElement(Navbar.Brand,{href:\"#\",onClick:this.openSettingsModal},React.createElement(\"i\",{className:cx(\"fas\",\"fa-cog\",Styles.SettingsIconStyle)}))),React.createElement(Modal,{show:this.state.showModal,onHide:this.close},React.createElement(Modal.Header,{closeButton:true},React.createElement(\"i\",{className:\"fas fa-dove\",size:\"2xl\"}),React.createElement(Modal.Title,{className:cx(Styles.ModalHeaderStyles)},\"Login\")),React.createElement(Modal.Body,null,React.createElement(Container,null,React.createElement(Form,null,React.createElement(Form.Group,{controlId:\"LoginForm\"},React.createElement(Form.Label,null,\"Key\"),React.createElement(Form.Control,{id:\"loginKey\",size:\"sm\",type:\"text\",placeholder:\"Enter base64 key\"}),React.createElement(Form.Text,{className:\"text-muted\"},\"Don't have an key? Use the form below to create an account.\")),React.createElement(Button,{variant:\"outline-danger\",size:\"sm\",onClick:function onClick(){return _this2.props.loginHandler($(\"#loginKey\").val());}},\"Login\")),React.createElement(\"hr\",null),React.createElement(Form,null,React.createElement(Form.Group,{controlId:\"SignupForm\"},React.createElement(Form.Label,null,\"Create Account\"),React.createElement(Form.Control,{id:\"newAccountUsername\",size:\"sm\",type:\"text\",placeholder:\"Enter a username\"}),React.createElement(Form.Text,{className:\"text-muted\"},\"This will generate a unique base 64 key which you can use to login. The key can be found in the Navigation bar.\"),React.createElement(\"br\",null),React.createElement(Button,{variant:\"outline-primary\",size:\"sm\",onClick:function onClick(){_this2.props.createAccount($(\"#newAccountUsername\").val());}},\"Sign Up\")))))),React.createElement(Modal,{show:this.state.showSettingsModal,onHide:this.closeSettingsModal},React.createElement(Modal.Header,{closeButton:true},React.createElement(\"i\",{className:\"fas fa-cog\"}),React.createElement(Modal.Title,{className:cx(Styles.ModalHeaderStyles)},\"Settings\")),React.createElement(Modal.Body,null,React.createElement(\"h5\",null,\"Background Color\"),React.createElement(\"div\",{className:cx(\"text-center\")},React.createElement(\"button\",{className:cx(Styles.ColorSelector,Styles.BgRed)}),React.createElement(\"button\",{className:cx(Styles.ColorSelector,Styles.BgDefault)})),React.createElement(\"p\",{className:\"text-muted\"},React.createElement(\"i\",null,\"/* Settings Checkboxes */\")))));}}]);return ConureNavbar;}(Component);export default ConureNavbar;","map":{"version":3,"sources":["C:/Users/User/Documents/Programming/conure/frontend/src/components/ConureNavbar/ConureNavbar.js"],"names":["React","Component","Navbar","Nav","Modal","Container","Form","Button","Popover","OverlayTrigger","cx","Styles","$","ConureNavbar","props","state","showModal","showSettingsModal","userKey","URLSearchParams","window","location","search","get","open","bind","close","openSettingsModal","closeSettingsModal","setState","popover","id","NavbarStyle","LogoStyle","userKeyStyle","LoginLinkWrapperStyle","LoginLinkStyle","SettingsIconStyle","ModalHeaderStyles","loginHandler","val","createAccount","ColorSelector","BgRed","BgDefault"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\n\r\nimport { cx } from \"emotion\";\r\nimport Styles from \"./ConureNavbarStyles.js\";\r\n\r\nimport $ from \"jquery\";\r\n\r\nclass ConureNavbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            showSettingsModal: false,\r\n        }\r\n        this.userKey = (new URLSearchParams(window.location.search)).get(\"id\");\r\n\r\n        // Method Bindings\r\n        this.open = this.open.bind(this);\r\n        this.close = this.close.bind(this);\r\n        this.openSettingsModal = this.openSettingsModal.bind(this);\r\n        this.closeSettingsModal = this.closeSettingsModal.bind(this);\r\n    }\r\n\r\n    open() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    close() {\r\n        this.setState({showModal: false});\r\n    }\r\n\r\n    openSettingsModal() {\r\n        this.setState({showSettingsModal: true});\r\n    }\r\n\r\n    closeSettingsModal() {\r\n        this.setState({showSettingsModal: false});\r\n    }\r\n\r\n    render() {\r\n        const popover = (\r\n            <Popover id=\"idInfo\">\r\n                <Popover.Title as=\"h5\">Key</Popover.Title>\r\n                <Popover.Content>\r\n                    You can use this base64 key to log into your account.\r\n                </Popover.Content>\r\n            </Popover>\r\n        )\r\n\r\n        return (\r\n            <div id={this.props.id}>\r\n                <Navbar className={ cx( Styles.NavbarStyle ) } bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"#\">\r\n                        <img className={ cx( Styles.LogoStyle ) }  src=\"../../../public/assets/img/ico/conure-light.ico\"/>\r\n                        Conure\r\n                    </Navbar.Brand>\r\n                    <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popover}>\r\n                        <span className={ cx( Styles.userKeyStyle ) } id=\"userKey\">{this.userKey}</span>\r\n                    </OverlayTrigger>\r\n                    <Nav className=\"ml-auto\">\r\n                        <a href=\"#\" className={ cx( Styles.LoginLinkWrapperStyle ) }>\r\n                            <small className={ cx( Styles.LoginLinkStyle ) } onClick={this.open}>Login</small>\r\n                        </a>\r\n                    </Nav>\r\n                    <Navbar.Brand href=\"#\" onClick={this.openSettingsModal}>\r\n                        <i className={ cx(\"fas\", \"fa-cog\", Styles.SettingsIconStyle) }></i>\r\n                    </Navbar.Brand>\r\n                </Navbar>\r\n\r\n                <Modal show={this.state.showModal} onHide={this.close}>\r\n                    <Modal.Header closeButton>\r\n                        <i className=\"fas fa-dove\" size=\"2xl\"></i>\r\n                        <Modal.Title className={ cx(Styles.ModalHeaderStyles) }>Login</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Container>\r\n                            <Form>\r\n                                <Form.Group controlId=\"LoginForm\">\r\n                                    <Form.Label>Key</Form.Label>\r\n                                    <Form.Control id=\"loginKey\" size=\"sm\" type=\"text\" placeholder=\"Enter base64 key\"/>\r\n                                    <Form.Text className=\"text-muted\">\r\n                                        Don't have an key? Use the form below to create an account.\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                                <Button variant=\"outline-danger\" size=\"sm\" onClick={() => this.props.loginHandler($(\"#loginKey\").val())}>\r\n                                    Login\r\n                                </Button>\r\n                            </Form>\r\n                            <hr/>\r\n                            <Form>\r\n                                <Form.Group controlId=\"SignupForm\">\r\n                                    <Form.Label>Create Account</Form.Label>\r\n                                    <Form.Control id=\"newAccountUsername\" size=\"sm\" type=\"text\" placeholder=\"Enter a username\"/>\r\n                                    <Form.Text className=\"text-muted\">\r\n                                        This will generate a unique base 64 key which you can use to login. The key can be found in the Navigation bar.\r\n                                    </Form.Text>\r\n                                    <br/>\r\n                                    <Button variant=\"outline-primary\" size=\"sm\" onClick={() => {this.props.createAccount($(\"#newAccountUsername\").val())}}>\r\n                                        Sign Up\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Container>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.showSettingsModal} onHide={this.closeSettingsModal}>\r\n                    <Modal.Header closeButton>\r\n                        <i className=\"fas fa-cog\"></i>\r\n                        <Modal.Title className={ cx(Styles.ModalHeaderStyles) }>Settings</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <h5>Background Color</h5>\r\n                        <div className={ cx(\"text-center\") }>\r\n                            <button className={ cx(Styles.ColorSelector, Styles.BgRed) }></button>\r\n                            <button className={ cx(Styles.ColorSelector, Styles.BgDefault) }></button>\r\n                        </div>\r\n                        <p className=\"text-muted\"><i>/* Settings Checkboxes */</i></p>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ConureNavbar;"]},"metadata":{},"sourceType":"module"}