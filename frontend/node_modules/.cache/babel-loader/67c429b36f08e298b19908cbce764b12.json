{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\User\\\\Documents\\\\Programming\\\\conure\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\User\\\\Documents\\\\Programming\\\\conure\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\User\\\\Documents\\\\Programming\\\\conure\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\User\\\\Documents\\\\Programming\\\\conure\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\User\\\\Documents\\\\Programming\\\\conure\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import Container from\"react-bootstrap/Container\";import ListGroup from\"react-bootstrap/ListGroup\";import{cx}from\"emotion\";import Styles from\"./ConureTaskWindowStyles.js\";var ConureTaskWindow=/*#__PURE__*/function(_Component){_inherits(ConureTaskWindow,_Component);function ConureTaskWindow(props){_classCallCheck(this,ConureTaskWindow);return _possibleConstructorReturn(this,_getPrototypeOf(ConureTaskWindow).call(this,props));}_createClass(ConureTaskWindow,[{key:\"render\",value:function render(){var _this=this;return React.createElement(\"div\",{id:this.props.id,className:cx(Styles.TaskWindowWrapperStyle)},React.createElement(Container,{className:cx(Styles.TaskWindowContainerStyle),fluid:true},React.createElement(ListGroup,{className:cx(Styles.TaskListStyle),variant:\"flush\"},this.props.tasks.map(function(task){return React.createElement(\"div\",{id:task._id,key:task._id,className:cx(Styles.TaskWrapperStyle)},React.createElement(ListGroup.Item,{key:task._id,id:task._id,className:cx(Styles.TaskStyle),onClick:_this.props.showDetail},task.body,React.createElement(\"i\",{className:cx(\"fas\",\"fa-times\",\"fa-lg\",Styles.DeleteIconStyle)})));}),React.createElement(ListGroup.Item,{className:cx(Styles.AddTaskBtnStyle),onClick:this.props.addTask,variant:\"danger\"},\"Add Task +\"))));}}]);return ConureTaskWindow;}(Component);export default ConureTaskWindow;","map":{"version":3,"sources":["C:/Users/User/Documents/Programming/conure/frontend/src/components/ConureTaskWindow/ConureTaskWindow.js"],"names":["React","Component","Container","ListGroup","cx","Styles","ConureTaskWindow","props","id","TaskWindowWrapperStyle","TaskWindowContainerStyle","TaskListStyle","tasks","map","task","_id","TaskWrapperStyle","TaskStyle","showDetail","body","DeleteIconStyle","AddTaskBtnStyle","addTask"],"mappings":"u5BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,MAAOC,CAAAA,SAAP,KAAsB,2BAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,2BAAtB,CAEA,OAASC,EAAT,KAAmB,SAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,6BAAnB,C,GAEMC,CAAAA,gB,0EACF,0BAAYC,KAAZ,CAAmB,2HACTA,KADS,GAElB,C,oEACQ,gBACL,MACI,4BAAK,EAAE,CAAE,KAAKA,KAAL,CAAWC,EAApB,CAAwB,SAAS,CAAGJ,EAAE,CAAEC,MAAM,CAACI,sBAAT,CAAtC,EACI,oBAAC,SAAD,EAAW,SAAS,CAAGL,EAAE,CAAEC,MAAM,CAACK,wBAAT,CAAzB,CAA+D,KAAK,KAApE,EAEI,oBAAC,SAAD,EAAW,SAAS,CAAGN,EAAE,CAAEC,MAAM,CAACM,aAAT,CAAzB,CAAoD,OAAO,CAAC,OAA5D,EAMQ,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,GAAjB,CAAsB,SAAAC,IAAI,QAC1B,4BAAK,EAAE,CAAEA,IAAI,CAACC,GAAd,CAAmB,GAAG,CAAED,IAAI,CAACC,GAA7B,CAAkC,SAAS,CAAGX,EAAE,CAACC,MAAM,CAACW,gBAAR,CAAhD,EACI,oBAAC,SAAD,CAAW,IAAX,EAAgB,GAAG,CAAEF,IAAI,CAACC,GAA1B,CAA+B,EAAE,CAAED,IAAI,CAACC,GAAxC,CAA6C,SAAS,CAAGX,EAAE,CAACC,MAAM,CAACY,SAAR,CAA3D,CAAgF,OAAO,CAAE,KAAI,CAACV,KAAL,CAAWW,UAApG,EACKJ,IAAI,CAACK,IADV,CAEI,yBAAG,SAAS,CAAGf,EAAE,CAAC,KAAD,CAAQ,UAAR,CAAoB,OAApB,CAA6BC,MAAM,CAACe,eAApC,CAAjB,EAFJ,CADJ,CAD0B,EAA1B,CANR,CAeI,oBAAC,SAAD,CAAW,IAAX,EAAgB,SAAS,CAAGhB,EAAE,CAAEC,MAAM,CAACgB,eAAT,CAA9B,CAA2D,OAAO,CAAE,KAAKd,KAAL,CAAWe,OAA/E,CAAwF,OAAO,CAAC,QAAhG,eAfJ,CAFJ,CADJ,CADJ,CA0BH,C,8BA/B0BrB,S,EAkC/B,cAAeK,CAAAA,gBAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nimport { cx } from \"emotion\";\r\nimport Styles from \"./ConureTaskWindowStyles.js\";\r\n\r\nclass ConureTaskWindow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div id={this.props.id} className={ cx( Styles.TaskWindowWrapperStyle ) }>\r\n                <Container className={ cx( Styles.TaskWindowContainerStyle ) } fluid>\r\n                    {/* <h6>Task Window</h6> */}\r\n                    <ListGroup className={ cx( Styles.TaskListStyle ) } variant=\"flush\">\r\n                        {/*\r\n                        <ListGroup.Item className={ cx( Styles.TaskStyle ) }>Download the Simple Timer React Component.</ListGroup.Item>\r\n                        <ListGroup.Item className={ cx( Styles.TaskStyle ) }>Set up MongoDB Backend</ListGroup.Item>\r\n                        */}\r\n                        {\r\n                            this.props.tasks.map( task => \r\n                            <div id={task._id} key={task._id} className={ cx(Styles.TaskWrapperStyle) }>\r\n                                <ListGroup.Item key={task._id} id={task._id} className={ cx(Styles.TaskStyle) } onClick={this.props.showDetail}>\r\n                                    {task.body}\r\n                                    <i className={ cx(\"fas\", \"fa-times\", \"fa-lg\", Styles.DeleteIconStyle) }></i>\r\n                                </ListGroup.Item>\r\n                            </div>\r\n                            )\r\n                        }\r\n                        <ListGroup.Item className={ cx( Styles.AddTaskBtnStyle ) } onClick={this.props.addTask} variant=\"danger\">\r\n                            Add Task + \r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ConureTaskWindow;"]},"metadata":{},"sourceType":"module"}